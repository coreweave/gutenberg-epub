# This is a basic workflow to help you get started with Actions

name: Test Runner

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ fromJSON(inputs.large-runner && '["self-hosted", "Linux", "chunky"]' || '["self-hosted", "Linux"]') }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Reads out cpu info
      - name: Check CPU
        run: cat /proc/cpuinfo

      # check env
      - name: Check env
        run: ls -la

      # Check if files are there
      - name: Check env2
        run: pwd

      # Check env variables
      - name: Check env3
        run: printenv | more

      # pull down s3 gutenberg lib
      - name: S3 Download gutenberg
        run: docker run -it --rm --entrypoint /bin/bash registry.gitlab.com/coreweave/utility-images/s3cmd:v1.2.0 -c "rm /root/.s3cfg && touch /root/.s3cfg && echo -e '[lfs]\naccess_key = {{ secret.ACTION_S3_ACCESSKEY }}\nsecret_key = \nhost_base = {{ secret.ACTION_S3_BASE }}\nhost_bucket = {{ secret.ACTION_S3_BUCKET }}\ncheck_ssl_certificate = False\ncheck_ssl_hostname = False' > /root/.s3cfg && s3cmd la && s3cmd get s3://gutenberg/pg-calibre-library.zip"  

      

      #unzip gutenberg data
      - name: Unzip Source
        run: unzip pg-calibre-library.zip

      #check files
      - name: debug check files
        run: ls -la

      # Run a fast parse to test
      - name: Fast Parse
        run: ./gutenberg-epub-converter -inputDir ./pg-calibre-library -outputDir ./Author -writeHeader=true -writeMetadata=false -cleanOutput=true -seperateFolders=false -stopEarly=5 -skipCopyRight=true -gutenbergCleaning=true -createSubsets=author

      #check files
      - name: debug check files
        run: cd ./Author && ls -la
    
